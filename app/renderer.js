const electron = require('electron');
const path = require('path');
const os = require('os');
let {PythonShell} = require('python-shell')

if (process.platform == 'win32') { 
    username = os.userInfo().username;
    // PyPath = 'C:\\Users\\' + username + '\\AppData\\Local\\Programs\\Python\\Python37\\python.exe';
    PyPath = 'E:\\Documents\\Facultate\\licenta_variante\\udemy_Cv\\FINAL_TF2_FILES\\venv\\Scripts\\python.exe';
    console.log(username, PyPath);
} 

// Importing dialog module using remote
const dialog = electron.remote.dialog;
  
var uploadFile = document.getElementById('upload');
var scanFile = document.getElementById('scan'); 
  
// Defining a Global file path Variable to store 
// user-selected file
global.filepath = undefined;
  
function startBar1(){
    t = '30s'
    const progress = document.querySelector('.progressBar85');
    progress.style.width = progress.getAttribute('percent85') + 'px';
    progress.style["transition-duration"] = t;
    progress.style["-webkit-transition-duration"] = t;
    progress.style.opacity = 1;
    }
    

function completeBar1(){
    t = '0.5s'
    const progress1 = document.querySelector('.progressBar100');
    progress1.style.width = progress1.getAttribute('percent100') + 'px';
    progress1.style["transition-duration"] = t;
    progress1.style["-webkit-transition-duration"] = t;
    progress1.style.opacity = 1;
}
    
//Flag variable to make Scan Button Unclickable before Uploading File
flag1 = false;

//Flag variable to make Upload Button Unclickable during scan
flag2 = true;

uploadFile.addEventListener('click', () => {
// Only available on windows 
    if (process.platform === 'win32') {
        // console.log(process.platform );
        // Resolves to a Promise<Object>
        dialog.showOpenDialog({
            title: 'Select the File to be uploaded',
            defaultPath: path.join(__dirname, '../assets/'),
            buttonLabel: 'Upload',
            // Restricting the user to only Text Files.
            filters: [
                // {
                //     name: 'Application',
                //     extensions: ['exe']
                // },
             ],
            // Specifying the File Selector Property
            properties: ['openFile']
        }).then(file => {
            // Stating whether dialog operation was
            // cancelled or not.
            // console.log(file.canceled);
            if (!file.canceled) {
              // Updating the GLOBAL filepath variable 
              // to user-selected file.
              global.filepath = file.filePaths[0].toString();
              console.log(global.filepath);
              console.log(file);
              flag1=true;
            }  
        }).catch(err => {
            console.log(err)
        });
    }
});

scanFile.addEventListener('click', () => {
    if(flag1 == true){
        flag2 = false;
        startBar1();
        // console.log(global.filepath);
        console.log('CLick pe scan....');
        let options = {
            mode: 'text',
            pythonPath:PyPath,
            pythonOptions: ['-u'], // get print results in real-time
            scriptPath: './',
            args: [global.filepath]
        };
        PythonShell.run('app/test.py', options, function (err, results) {
            if (err) {
                console.log(err);
                throw err;
            }
            console.log("Teoretic ar trb sa inceapa")
            console.log(results);
            completeBar1()
            flag2 = true;   
        });
        flag1 = false;
    }
});

