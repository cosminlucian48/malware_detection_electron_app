const electron = require('electron');
const path = require('path');
const os = require('os');
let { PythonShell } = require('python-shell');
const pathToPredictScript = path.join(__dirname, 'predict.py');
const dialog = electron.remote.dialog;
var constants = require('./constants');

if (process.platform == 'win32') {
    PyPath = constants.PYPATH.value;
}
//flags
buttonFlag = false;
scanFlag = false;
filepath = undefined;

// html elements
var uploadFile = document.getElementById('upload-scan');
var responseContainer = document.getElementById('response-container');
var responseClass = document.getElementById('response-class');
var responseInput = document.getElementById('response-input');
var filePathInput = document.getElementById('file-path-input');
var editFilePathIcon = document.getElementById('edit-file-path');
var inputContainer = document.getElementById('input-container');


function buttonFunctionality(button_type) {
    if (button_type === 'close') {
        electron.remote.getCurrentWindow().close();
    } else if (button_type === 'minimize') {
        electron.remote.getCurrentWindow().minimize();
    }
}


document.querySelector('#close-button').addEventListener('click', () => {
    buttonFunctionality('close');
});

document.querySelector('#minimize-button').addEventListener('click', () => {
    buttonFunctionality('minimize')
});

editFilePathIcon.addEventListener('click', () => {
    uploadClick(false);
    filePathInput.value = filepath;
});


function checkButtonFlag() {
    if (!buttonFlag) {
        uploadFile.innerHTML = "Scan";
        buttonFlag = true;
        uploadFile.classList.add("ring");
        responseContainer.classList.add("invisible");
        inputContainer.classList.remove("invisible");

    }
    else {
        uploadFile.innerHTML = "Upload";
        buttonFlag = false;
        uploadFile.classList.remove("ring");
        responseContainer.classList.remove("invisible");
        inputContainer.classList.add("invisible");
    }
}

function fileLoaded() {
    var words = JSON.stringify(filepath).split("\\");
    filename = words[words.length - 1].slice(0, -1);
    filePathInput.value = filepath;
}


function startFileScan() {
    timer = '20s'
    const loading = document.querySelector('.loading-bar90');
    loading.style.width = loading.getAttribute('loading90') + 'px';
    loading.style["transition-duration"] = timer;
    loading.style.opacity = 1;
}

function completeFileScan() {
    timer = '0.3s'
    const loading = document.querySelector('.loading-bar100');
    loading.style.width = loading.getAttribute('loading100').concat('px');
    loading.style["transition-duration"] = timer;
    loading.style.opacity = 1;
}

function clearLoading() {
    timer = '0.3s'
    const loading = document.querySelector('.loading-bar');
    loading.style.width = loading.getAttribute('loading0').concat('px');
    loading.style["transition-duration"] = timer;
    loading.style.opacity = 1;
}


function uploadClick(mode) {
    // check if os is windows
    if (process.platform === 'win32') {

        dialog.showOpenDialog({
            title: 'Select the file you want to scann',
            defaultPath: path.join(__dirname, '../assets/'),
            buttonLabel: 'Upload',
            properties: ['openFile']
        }).then(fileUploaded => {
            if (!fileUploaded.canceled) {
                filepath = fileUploaded.filePaths[0].toString();
                if (mode) {
                    scanFlag = true;
                    checkButtonFlag();
                }
                fileLoaded();
            }

        }).catch(err => {
            console.log(err)
        });
    }
}

function scanClick() {
    startFileScan();
    console.log('CLick pe scan....');
    let options = {
        mode: 'text',
        pythonPath: PyPath,
        pythonOptions: ['-u'], 
        scriptPath: './',
        args: [filepath]
    };
    PythonShell.run(pathToPredictScript, options, function (err, results) {
        if (err) {
            console.log(err);
            throw err;
        }
        console.log("Teoretic ar trb sa inceapa")
        console.log(results);
        completeFileScan();
        checkButtonFlag();
        responseClass.innerHTML = results[results.length - 1];
        responseInput.src = results[0]

    });
    scanFlag = false;
}

uploadFile.addEventListener('click', () => {
    if (!buttonFlag) {
        if (!scanFlag) {
            clearLoading();
        }
        uploadClick(true);
    } else {
        if (scanFlag == true) {
            scanClick();
        }
    }
});